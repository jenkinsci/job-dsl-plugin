import de.undercouch.gradle.tasks.download.Download

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:${assetPipelineVersion}"
        classpath "com.bertramlabs.plugins:less-asset-pipeline:${assetPipelineVersion}"
        classpath "com.bertramlabs.plugins:handlebars-asset-pipeline:${assetPipelineVersion}"
    }
}

plugins {
    id 'com.eriwen.gradle.css' version '2.14.0'
    id 'com.eriwen.gradle.js' version '2.14.1'
}

apply plugin: 'org.ajoberstar.github-pages'
apply plugin: 'com.bertramlabs.asset-pipeline'

repositories {
    maven {
        url('https://repo.jenkins-ci.org/public/')
    }
}

assets {
    enableDigests = false
    enableGzip = false
    enableSourceMaps = false
    verbose = false
    configOptions = [
            handlebars: [
                    templateRoot: 'templates'
            ]
    ]
}

configurations {
    webjars {
        transitive = false
    }
}

dependencies {
    webjars 'org.webjars:bootstrap:3.3.4'
    webjars 'org.webjars:jquery:1.11.1'
    webjars 'org.webjars:jquery-ui:1.11.3'
    webjars 'org.webjars:jqueryui-layout:1.4.0'
    webjars 'org.webjars:jstree:3.0.4'
    webjars 'org.webjars:handlebars:4.0.2'
    webjars 'org.webjars.npm:underscore:1.7.0'
    webjars 'org.webjars.npm:backbone:1.2.3'
    webjars 'org.webjars.npm:backbone.marionette:2.4.2'
    webjars 'org.webjars:highlightjs:8.4-4'
}

combineJs {
    source 'build/webjars/jquery/1.11.1/jquery.min.js'
    source 'build/webjars/jquery-ui/1.11.3/jquery-ui.min.js'
    source 'build/webjars/jqueryui-layout/1.4.0/jquery.layout.js'
    source 'build/webjars/jstree/3.0.4/jstree.min.js'
    source 'build/webjars/handlebars/4.0.2/handlebars.runtime.min.js'
    source 'build/webjars/underscore/1.7.0/underscore-min.js'
    source 'build/webjars/backbone/1.2.3/backbone-min.js'
    source 'build/webjars/backbone.marionette/2.4.2/lib/backbone.marionette.min.js'
    source 'build/assets/App.js'
    source 'build/assets'
    source 'build/webjars/bootstrap/3.3.4/js/bootstrap.min.js'
    source 'build/webjars/highlightjs/8.4-4/highlight.min.js'
    include '**/*.js'
    dest = file("${buildDir}/dist/js/app.js")
    dependsOn 'assetCompile', 'extractWebJars'
}

combineCss {
    source 'build/webjars/bootstrap/3.3.4/css/bootstrap.min.css'
    source 'build/webjars/jstree/3.0.4/themes/default/style.min.css'
    source 'build/assets'
    source 'build/webjars/highlightjs/8.4-4/styles/default.min.css'
    include '**/*.css'
    dest = "${buildDir}/dist/css/app.css"
    dependsOn 'assetCompile', 'extractWebJars'
}

task concat {
    dependsOn 'combineJs', 'combineCss'
}

task build {
    dependsOn 'concat', 'processUpdateCenter', 'copyData', 'copyFonts'
}

githubPages {
    commitMessage = "updated gh-pages for $version"
    repoUri = "git@github.com:$githubUser/job-dsl-plugin.git"
    pages {
        from '.'
        include 'index.html'
        include 'config.json'
        include 'build/data/**'
        include 'build/dist/**'
    }
}

task copyData(type: Copy) {
    from tasks.getByPath(':job-dsl-core:generateApiDoc')
    into "${project.buildDir}/data"
}

task copyFonts(type: Sync) {
    into file("${buildDir}/dist/fonts")

    configurations.webjars.files.each { File jar ->
        from zipTree(jar)
    }

    include '**/fonts/*'

    includeEmptyDirs false

    eachFile { details ->
        details.path = details.name
    }
}

task extractWebJars(type: Sync) {
    into file("${buildDir}/webjars")

    configurations.webjars.files.each { File jar ->
        from zipTree(jar)
    }

    include '**/*.css'
    include '**/*.js'

    includeEmptyDirs false

    eachFile { details ->
        details.path -= 'META-INF/resources/webjars'
    }
}

task downloadUpdateCenter(type: Download) {
    src 'https://updates.jenkins-ci.org/update-center.json'
    dest 'build/download/update-center.jsonp'
    onlyIfNewer true
}

task processUpdateCenter {
    ext.jsonpFile = file('build/download/update-center.jsonp')
    ext.jsonFile = file('build/data/update-center.json')

    dependsOn tasks.downloadUpdateCenter
    inputs.file jsonpFile
    outputs.file jsonFile

    doLast {
        def lines = jsonpFile.readLines('UTF-8')
        jsonFile.setText(lines[1..-2].join('\n'), 'UTF-8')
    }
}

def tokenizedVersion = version.split(/\.|-/) // version can be either x.y or x.y-SNAPSHOT
int latestVersion = (tokenizedVersion[1] as int) - 1 // extract minor version and decrease by 1 to get the latest released version
(38..latestVersion).each { minorVersion ->
    def version = "1.${minorVersion}"
    Configuration config = configurations.create("api-${version}")
    dependencies.add(config.name, "org.jenkins-ci.plugins:job-dsl-core:$version:apidoc@json")
    tasks.copyData.from(config)
}

tasks.publishGhPages.dependsOn('build')

task clean(type: Delete) {
    delete project.buildDir
}
