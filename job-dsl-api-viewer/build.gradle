import de.undercouch.gradle.tasks.download.Download

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:${assetPipelineVersion}"
        classpath "com.bertramlabs.plugins:less-asset-pipeline:${assetPipelineVersion}"
        classpath "com.bertramlabs.plugins:handlebars-asset-pipeline:${assetPipelineVersion}"
    }
}

plugins {
    id 'de.undercouch.download' version '2.0.0'
    id 'com.eriwen.gradle.css' version '2.12.0'
    id 'com.eriwen.gradle.js' version '2.12.0'
}

apply plugin: 'org.ajoberstar.github-pages'
apply plugin: 'com.bertramlabs.asset-pipeline'

assets {
    enableDigests = false
    enableGzip = false
    enableSourceMaps = false
    verbose = false
    configOptions = [
            handlebars: [
                    templateRoot: 'templates'
            ]
    ]
}

combineJs {
    source 'build/assets'
    include '**/*.js'
    dest = file("${buildDir}/dist/js/app.js")
    dependsOn 'assetCompile'
}

combineCss {
    source 'build/assets'
    include '**/*.css'
    dest = "${buildDir}/dist/css/app.css"
    dependsOn 'assetCompile'
}

task concat {
    dependsOn 'combineJs', 'combineCss'
}

task build {
    dependsOn 'concat', 'downloadUpdateCenter', 'copyData'
}

githubPages {
    commitMessage = "updated gh-pages for $version"
    repoUri = "git@github.com:$githubUser/job-dsl-plugin.git"
    pages {
        from '.'
        include 'index.html'
        include 'build/data/**'
        include 'build/dist/**'
    }
}

task copyData(type: Copy) {
    from tasks.getByPath(':job-dsl-core:generateApiDoc')
    into "${project.buildDir}/data"
}

task downloadUpdateCenter(type: Download) {
    src 'https://updates.jenkins-ci.org/update-center.json'
    dest 'build/data/update-center.jsonp'
    onlyIfNewer true
}

def tokenizedVersion = version.split(/\.|-/) // version can be either x.y or x.y-SNAPSHOT
int latestVersion = (tokenizedVersion[1] as int) - 1 // extract minor version and decrease by 1 to get the latest released version
(38..latestVersion).each { minorVersion ->
    def version = "1.${minorVersion}"
    task "downloadData-${version}"(type: Download) {
        src "https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/job-dsl-core/${version}/job-dsl-core-${version}-apidoc.json"
        dest "${project.buildDir}/data/dsl-${version}.json"
        onlyIfNewer true
    }
    tasks.build.dependsOn("downloadData-${version}")
}

tasks.publishGhPages.dependsOn('build')

task clean(type: Delete) {
    delete project.buildDir
}
